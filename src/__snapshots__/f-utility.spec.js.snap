// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`f-utility vs. ramda [ENV: debug] 1`] = `
Array [
  "isArray",
  "freeze",
  "round",
  "box",
  "constant",
  "first",
  "jam",
  "mash",
  "mode",
  "smash",
  "weld",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "def",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "cleanErrorStackFor",
  "toJSON",
  "orDefault",
  "smooth",
  "j2",
  "isObject",
  "hasProp",
  "pathIs",
  "applySpecN",
  "I",
  "K",
  "entries",
  "every",
  "fromEntries",
  "sideEffect2",
  "some",
  "custom",
]
`;

exports[`f-utility vs. ramda [ENV: production] 1`] = `
Array [
  "isArray",
  "freeze",
  "round",
  "box",
  "constant",
  "first",
  "jam",
  "mash",
  "mode",
  "smash",
  "weld",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "def",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "cleanErrorStackFor",
  "toJSON",
  "orDefault",
  "smooth",
  "j2",
  "isObject",
  "pathIs",
  "hasProp",
  "applySpecN",
  "I",
  "K",
  "entries",
  "every",
  "fromEntries",
  "sideEffect2",
  "some",
]
`;

exports[`ramda vs. f-utility [ENV: debug] 1`] = `
Array [
  "__",
  "aperture",
  "applySpec",
  "ascend",
  "assocPath",
  "binary",
  "clamp",
  "clone",
  "comparator",
  "composeK",
  "composeP",
  "composeWith",
  "construct",
  "constructN",
  "contains",
  "converge",
  "countBy",
  "defaultTo",
  "descend",
  "differenceWith",
  "dissocPath",
  "dropLastWhile",
  "dropRepeats",
  "dropRepeatsWith",
  "dropWhile",
  "evolve",
  "forEachObjIndexed",
  "groupWith",
  "indexBy",
  "intersperse",
  "into",
  "invoker",
  "lens",
  "lensIndex",
  "lensPath",
  "lensProp",
  "mapAccum",
  "mapAccumRight",
  "mapObjIndexed",
  "mathMod",
  "maxBy",
  "mergeDeepLeft",
  "mergeDeepRight",
  "mergeDeepWith",
  "mergeDeepWithKey",
  "mergeLeft",
  "mergeWith",
  "mergeWithKey",
  "minBy",
  "modulo",
  "nAry",
  "o",
  "otherwise",
  "over",
  "partition",
  "pickAll",
  "pipeK",
  "pipeP",
  "pipeWith",
  "project",
  "reduceBy",
  "reduceRight",
  "reduceWhile",
  "reduced",
  "remove",
  "scan",
  "sequence",
  "set",
  "sortWith",
  "splitEvery",
  "splitWhen",
  "symmetricDifferenceWith",
  "takeLastWhile",
  "takeWhile",
  "then",
  "times",
  "toPairsIn",
  "toString",
  "transduce",
  "transpose",
  "traverse",
  "type",
  "unapply",
  "unary",
  "uncurryN",
  "unfold",
  "unionWith",
  "uniqBy",
  "uniqWith",
  "unnest",
  "until",
  "useWith",
  "valuesIn",
  "view",
  "where",
  "whereEq",
  "without",
  "xprod",
  "zip",
  "zipObj",
  "zipWith",
]
`;

exports[`ramda vs. f-utility [ENV: production] 1`] = `
Array [
  "__",
  "aperture",
  "applySpec",
  "ascend",
  "assocPath",
  "binary",
  "clamp",
  "clone",
  "comparator",
  "composeK",
  "composeP",
  "composeWith",
  "construct",
  "constructN",
  "contains",
  "converge",
  "countBy",
  "defaultTo",
  "descend",
  "differenceWith",
  "dissocPath",
  "dropLastWhile",
  "dropRepeats",
  "dropRepeatsWith",
  "dropWhile",
  "evolve",
  "forEachObjIndexed",
  "groupWith",
  "indexBy",
  "intersperse",
  "into",
  "invoker",
  "lens",
  "lensIndex",
  "lensPath",
  "lensProp",
  "mapAccum",
  "mapAccumRight",
  "mapObjIndexed",
  "mathMod",
  "maxBy",
  "mergeDeepLeft",
  "mergeDeepRight",
  "mergeDeepWith",
  "mergeDeepWithKey",
  "mergeLeft",
  "mergeWith",
  "mergeWithKey",
  "minBy",
  "modulo",
  "nAry",
  "o",
  "otherwise",
  "over",
  "partition",
  "pickAll",
  "pipeK",
  "pipeP",
  "pipeWith",
  "project",
  "reduceBy",
  "reduceRight",
  "reduceWhile",
  "reduced",
  "remove",
  "scan",
  "sequence",
  "set",
  "sortWith",
  "splitEvery",
  "splitWhen",
  "symmetricDifferenceWith",
  "takeLastWhile",
  "takeWhile",
  "then",
  "times",
  "toPairsIn",
  "toString",
  "transduce",
  "transpose",
  "traverse",
  "type",
  "unapply",
  "unary",
  "uncurryN",
  "unfold",
  "unionWith",
  "uniqBy",
  "uniqWith",
  "unnest",
  "until",
  "useWith",
  "valuesIn",
  "view",
  "where",
  "whereEq",
  "without",
  "xprod",
  "zip",
  "zipObj",
  "zipWith",
]
`;

exports[`shared interface [ENV: debug] 1`] = `
Array [
  "trim",
  "isArray",
  "keys",
  "values",
  "freeze",
  "round",
  "F",
  "T",
  "adjust",
  "append",
  "assoc",
  "box",
  "call",
  "complement",
  "compose",
  "constant",
  "dec",
  "dissoc",
  "dropLast",
  "drop",
  "empty",
  "first",
  "fromPairs",
  "identity",
  "inc",
  "init",
  "invertObj",
  "invert",
  "jam",
  "juxt",
  "keysIn",
  "last",
  "length",
  "mash",
  "mean",
  "memoizeWith",
  "mode",
  "move",
  "negate",
  "not",
  "nthArg",
  "objOf",
  "once",
  "pair",
  "partialRight",
  "partial",
  "pipe",
  "prepend",
  "repeat",
  "reverse",
  "smash",
  "splitAt",
  "sum",
  "product",
  "tail",
  "takeLast",
  "take",
  "weld",
  "test",
  "toLower",
  "toPairs",
  "toUpper",
  "update",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "def",
  "curry",
  "curryN",
  "is",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "isNil",
  "cleanErrorStackFor",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "apply",
  "applyTo",
  "concat",
  "cond",
  "divide",
  "endsWith",
  "equals",
  "filter",
  "find",
  "findLast",
  "findIndex",
  "findLastIndex",
  "forEach",
  "gt",
  "gte",
  "hasIn",
  "has",
  "identical",
  "includes",
  "indexOf",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "map",
  "match",
  "max",
  "min",
  "multiply",
  "none",
  "nth",
  "or",
  "pickBy",
  "range",
  "sort",
  "split",
  "startsWith",
  "subtract",
  "toJSON",
  "tryCatch",
  "both",
  "either",
  "eqBy",
  "innerJoin",
  "insert",
  "insertAll",
  "reduce",
  "replace",
  "slice",
  "ifElse",
  "orDefault",
  "smooth",
  "j2",
  "addIndex",
  "pick",
  "bind",
  "flip",
  "liftN",
  "lift",
  "thunkify",
  "groupBy",
  "isEmpty",
  "when",
  "unless",
  "flatten",
  "chain",
  "reject",
  "omit",
  "uniq",
  "intersection",
  "median",
  "isObject",
  "union",
  "difference",
  "symmetricDifference",
  "anyPass",
  "allPass",
  "pathOr",
  "hasProp",
  "hasPath",
  "path",
  "pathEq",
  "pathSatisfies",
  "pathIs",
  "propOr",
  "prop",
  "propEq",
  "propSatisfies",
  "propIs",
  "props",
  "eqProps",
  "pluck",
  "applySpecN",
  "I",
  "K",
  "always",
  "entries",
  "every",
  "fromEntries",
  "merge",
  "mergeAll",
  "mergeRight",
  "sideEffect2",
  "some",
  "sortBy",
  "tap",
  "head",
  "of",
  "custom",
  "aperture",
  "applySpec",
  "ascend",
  "assocPath",
  "binary",
  "clamp",
  "clone",
  "comparator",
  "composeK",
  "composeP",
  "composeWith",
  "construct",
  "constructN",
  "contains",
  "converge",
  "countBy",
  "defaultTo",
  "descend",
  "differenceWith",
  "dissocPath",
  "dropLastWhile",
  "dropRepeats",
  "dropRepeatsWith",
  "dropWhile",
  "evolve",
  "forEachObjIndexed",
  "groupWith",
  "indexBy",
  "intersperse",
  "into",
  "invoker",
  "lens",
  "lensIndex",
  "lensPath",
  "lensProp",
  "mapAccum",
  "mapAccumRight",
  "mapObjIndexed",
  "mathMod",
  "maxBy",
  "mergeDeepLeft",
  "mergeDeepRight",
  "mergeDeepWith",
  "mergeDeepWithKey",
  "mergeLeft",
  "mergeWith",
  "mergeWithKey",
  "minBy",
  "modulo",
  "nAry",
  "o",
  "otherwise",
  "over",
  "partition",
  "pickAll",
  "pipeK",
  "pipeP",
  "pipeWith",
  "project",
  "reduceBy",
  "reduceRight",
  "reduceWhile",
  "reduced",
  "remove",
  "scan",
  "sequence",
  "set",
  "sortWith",
  "splitEvery",
  "splitWhen",
  "symmetricDifferenceWith",
  "takeLastWhile",
  "takeWhile",
  "then",
  "times",
  "toPairsIn",
  "toString",
  "transduce",
  "transpose",
  "traverse",
  "type",
  "unapply",
  "unary",
  "uncurryN",
  "unfold",
  "unionWith",
  "uniqBy",
  "uniqWith",
  "unnest",
  "until",
  "useWith",
  "valuesIn",
  "view",
  "where",
  "whereEq",
  "without",
  "xprod",
  "zip",
  "zipObj",
  "zipWith",
]
`;

exports[`shared interface [ENV: production] 1`] = `
Array [
  "trim",
  "isArray",
  "keys",
  "values",
  "freeze",
  "round",
  "F",
  "T",
  "adjust",
  "append",
  "assoc",
  "box",
  "call",
  "complement",
  "compose",
  "constant",
  "dec",
  "dissoc",
  "drop",
  "dropLast",
  "empty",
  "first",
  "fromPairs",
  "identity",
  "inc",
  "init",
  "invert",
  "invertObj",
  "jam",
  "juxt",
  "keysIn",
  "last",
  "length",
  "mash",
  "mean",
  "mode",
  "move",
  "negate",
  "not",
  "nthArg",
  "objOf",
  "once",
  "pair",
  "partial",
  "partialRight",
  "pipe",
  "prepend",
  "repeat",
  "reverse",
  "smash",
  "splitAt",
  "sum",
  "product",
  "tail",
  "take",
  "takeLast",
  "weld",
  "test",
  "toLower",
  "toPairs",
  "toUpper",
  "update",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "memoizeWith",
  "def",
  "curry",
  "curryN",
  "is",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "isNil",
  "cleanErrorStackFor",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "apply",
  "applyTo",
  "concat",
  "cond",
  "divide",
  "endsWith",
  "equals",
  "filter",
  "find",
  "findLast",
  "findIndex",
  "findLastIndex",
  "forEach",
  "gt",
  "gte",
  "hasIn",
  "has",
  "identical",
  "includes",
  "indexOf",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "map",
  "match",
  "max",
  "min",
  "multiply",
  "none",
  "nth",
  "or",
  "pickBy",
  "range",
  "sort",
  "split",
  "startsWith",
  "subtract",
  "toJSON",
  "tryCatch",
  "both",
  "either",
  "eqBy",
  "innerJoin",
  "insert",
  "insertAll",
  "reduce",
  "replace",
  "slice",
  "ifElse",
  "orDefault",
  "smooth",
  "j2",
  "addIndex",
  "pick",
  "bind",
  "flip",
  "liftN",
  "lift",
  "thunkify",
  "groupBy",
  "isEmpty",
  "when",
  "unless",
  "flatten",
  "chain",
  "reject",
  "omit",
  "uniq",
  "intersection",
  "isObject",
  "median",
  "union",
  "difference",
  "symmetricDifference",
  "anyPass",
  "allPass",
  "pathOr",
  "hasPath",
  "path",
  "pathEq",
  "pathSatisfies",
  "pathIs",
  "hasProp",
  "propOr",
  "prop",
  "propEq",
  "propSatisfies",
  "propIs",
  "props",
  "eqProps",
  "pluck",
  "applySpecN",
  "I",
  "K",
  "always",
  "entries",
  "every",
  "fromEntries",
  "merge",
  "mergeAll",
  "mergeRight",
  "sideEffect2",
  "some",
  "sortBy",
  "tap",
  "head",
  "of",
  "aperture",
  "applySpec",
  "ascend",
  "assocPath",
  "binary",
  "clamp",
  "clone",
  "comparator",
  "composeK",
  "composeP",
  "composeWith",
  "construct",
  "constructN",
  "contains",
  "converge",
  "countBy",
  "defaultTo",
  "descend",
  "differenceWith",
  "dissocPath",
  "dropLastWhile",
  "dropRepeats",
  "dropRepeatsWith",
  "dropWhile",
  "evolve",
  "forEachObjIndexed",
  "groupWith",
  "indexBy",
  "intersperse",
  "into",
  "invoker",
  "lens",
  "lensIndex",
  "lensPath",
  "lensProp",
  "mapAccum",
  "mapAccumRight",
  "mapObjIndexed",
  "mathMod",
  "maxBy",
  "mergeDeepLeft",
  "mergeDeepRight",
  "mergeDeepWith",
  "mergeDeepWithKey",
  "mergeLeft",
  "mergeWith",
  "mergeWithKey",
  "minBy",
  "modulo",
  "nAry",
  "o",
  "otherwise",
  "over",
  "partition",
  "pickAll",
  "pipeK",
  "pipeP",
  "pipeWith",
  "project",
  "reduceBy",
  "reduceRight",
  "reduceWhile",
  "reduced",
  "remove",
  "scan",
  "sequence",
  "set",
  "sortWith",
  "splitEvery",
  "splitWhen",
  "symmetricDifferenceWith",
  "takeLastWhile",
  "takeWhile",
  "then",
  "times",
  "toPairsIn",
  "toString",
  "transduce",
  "transpose",
  "traverse",
  "type",
  "unapply",
  "unary",
  "uncurryN",
  "unfold",
  "unionWith",
  "uniqBy",
  "uniqWith",
  "unnest",
  "until",
  "useWith",
  "valuesIn",
  "view",
  "where",
  "whereEq",
  "without",
  "xprod",
  "zip",
  "zipObj",
  "zipWith",
]
`;

exports[`snapshot [ENV: debug] 1`] = `
Array [
  "trim",
  "isArray",
  "keys",
  "values",
  "freeze",
  "round",
  "F",
  "T",
  "adjust",
  "append",
  "assoc",
  "box",
  "call",
  "complement",
  "compose",
  "constant",
  "dec",
  "dissoc",
  "dropLast",
  "drop",
  "empty",
  "first",
  "fromPairs",
  "identity",
  "inc",
  "init",
  "invertObj",
  "invert",
  "jam",
  "juxt",
  "keysIn",
  "last",
  "length",
  "mash",
  "mean",
  "memoizeWith",
  "mode",
  "move",
  "negate",
  "not",
  "nthArg",
  "objOf",
  "once",
  "pair",
  "partialRight",
  "partial",
  "pipe",
  "prepend",
  "repeat",
  "reverse",
  "smash",
  "splitAt",
  "sum",
  "product",
  "tail",
  "takeLast",
  "take",
  "weld",
  "test",
  "toLower",
  "toPairs",
  "toUpper",
  "update",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "def",
  "curry",
  "curryN",
  "is",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "isNil",
  "cleanErrorStackFor",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "apply",
  "applyTo",
  "concat",
  "cond",
  "divide",
  "endsWith",
  "equals",
  "filter",
  "find",
  "findLast",
  "findIndex",
  "findLastIndex",
  "forEach",
  "gt",
  "gte",
  "hasIn",
  "has",
  "identical",
  "includes",
  "indexOf",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "map",
  "match",
  "max",
  "min",
  "multiply",
  "none",
  "nth",
  "or",
  "pickBy",
  "range",
  "sort",
  "split",
  "startsWith",
  "subtract",
  "toJSON",
  "tryCatch",
  "both",
  "either",
  "eqBy",
  "innerJoin",
  "insert",
  "insertAll",
  "reduce",
  "replace",
  "slice",
  "ifElse",
  "orDefault",
  "smooth",
  "j2",
  "addIndex",
  "pick",
  "bind",
  "flip",
  "liftN",
  "lift",
  "thunkify",
  "groupBy",
  "isEmpty",
  "when",
  "unless",
  "flatten",
  "chain",
  "reject",
  "omit",
  "uniq",
  "intersection",
  "median",
  "isObject",
  "union",
  "difference",
  "symmetricDifference",
  "anyPass",
  "allPass",
  "pathOr",
  "hasProp",
  "hasPath",
  "path",
  "pathEq",
  "pathSatisfies",
  "pathIs",
  "propOr",
  "prop",
  "propEq",
  "propSatisfies",
  "propIs",
  "props",
  "eqProps",
  "pluck",
  "applySpecN",
  "I",
  "K",
  "always",
  "entries",
  "every",
  "fromEntries",
  "merge",
  "mergeAll",
  "mergeRight",
  "sideEffect2",
  "some",
  "sortBy",
  "tap",
  "head",
  "of",
  "custom",
]
`;

exports[`snapshot [ENV: production] 1`] = `
Array [
  "trim",
  "isArray",
  "keys",
  "values",
  "freeze",
  "round",
  "F",
  "T",
  "adjust",
  "append",
  "assoc",
  "box",
  "call",
  "complement",
  "compose",
  "constant",
  "dec",
  "dissoc",
  "drop",
  "dropLast",
  "empty",
  "first",
  "fromPairs",
  "identity",
  "inc",
  "init",
  "invert",
  "invertObj",
  "jam",
  "juxt",
  "keysIn",
  "last",
  "length",
  "mash",
  "mean",
  "mode",
  "move",
  "negate",
  "not",
  "nthArg",
  "objOf",
  "once",
  "pair",
  "partial",
  "partialRight",
  "pipe",
  "prepend",
  "repeat",
  "reverse",
  "smash",
  "splitAt",
  "sum",
  "product",
  "tail",
  "take",
  "takeLast",
  "weld",
  "test",
  "toLower",
  "toPairs",
  "toUpper",
  "update",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "memoizeWith",
  "def",
  "curry",
  "curryN",
  "is",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "isNil",
  "cleanErrorStackFor",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "apply",
  "applyTo",
  "concat",
  "cond",
  "divide",
  "endsWith",
  "equals",
  "filter",
  "find",
  "findLast",
  "findIndex",
  "findLastIndex",
  "forEach",
  "gt",
  "gte",
  "hasIn",
  "has",
  "identical",
  "includes",
  "indexOf",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "map",
  "match",
  "max",
  "min",
  "multiply",
  "none",
  "nth",
  "or",
  "pickBy",
  "range",
  "sort",
  "split",
  "startsWith",
  "subtract",
  "toJSON",
  "tryCatch",
  "both",
  "either",
  "eqBy",
  "innerJoin",
  "insert",
  "insertAll",
  "reduce",
  "replace",
  "slice",
  "ifElse",
  "orDefault",
  "smooth",
  "j2",
  "addIndex",
  "pick",
  "bind",
  "flip",
  "liftN",
  "lift",
  "thunkify",
  "groupBy",
  "isEmpty",
  "when",
  "unless",
  "flatten",
  "chain",
  "reject",
  "omit",
  "uniq",
  "intersection",
  "isObject",
  "median",
  "union",
  "difference",
  "symmetricDifference",
  "anyPass",
  "allPass",
  "pathOr",
  "hasPath",
  "path",
  "pathEq",
  "pathSatisfies",
  "pathIs",
  "hasProp",
  "propOr",
  "prop",
  "propEq",
  "propSatisfies",
  "propIs",
  "props",
  "eqProps",
  "pluck",
  "applySpecN",
  "I",
  "K",
  "always",
  "entries",
  "every",
  "fromEntries",
  "merge",
  "mergeAll",
  "mergeRight",
  "sideEffect2",
  "some",
  "sortBy",
  "tap",
  "head",
  "of",
]
`;

exports[`v3 vs. v4 [ENV: debug] 1`] = `Array []`;

exports[`v3 vs. v4 [ENV: production] 1`] = `Array []`;

exports[`v4 vs. v3 [ENV: debug] 1`] = `
Array [
  "trim",
  "isArray",
  "keys",
  "values",
  "freeze",
  "round",
  "F",
  "T",
  "adjust",
  "append",
  "assoc",
  "box",
  "call",
  "complement",
  "compose",
  "constant",
  "dec",
  "dissoc",
  "dropLast",
  "drop",
  "empty",
  "first",
  "fromPairs",
  "identity",
  "inc",
  "init",
  "invertObj",
  "invert",
  "jam",
  "juxt",
  "keysIn",
  "last",
  "length",
  "mash",
  "mean",
  "memoizeWith",
  "mode",
  "move",
  "negate",
  "not",
  "nthArg",
  "objOf",
  "once",
  "pair",
  "partialRight",
  "partial",
  "pipe",
  "prepend",
  "repeat",
  "reverse",
  "smash",
  "splitAt",
  "sum",
  "product",
  "tail",
  "takeLast",
  "take",
  "weld",
  "test",
  "toLower",
  "toPairs",
  "toUpper",
  "update",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "def",
  "curry",
  "curryN",
  "is",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "isNil",
  "cleanErrorStackFor",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "apply",
  "applyTo",
  "concat",
  "cond",
  "divide",
  "endsWith",
  "equals",
  "filter",
  "find",
  "findLast",
  "findIndex",
  "findLastIndex",
  "forEach",
  "gt",
  "gte",
  "hasIn",
  "has",
  "identical",
  "includes",
  "indexOf",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "map",
  "match",
  "max",
  "min",
  "multiply",
  "none",
  "nth",
  "or",
  "pickBy",
  "range",
  "sort",
  "split",
  "startsWith",
  "subtract",
  "toJSON",
  "tryCatch",
  "both",
  "either",
  "eqBy",
  "innerJoin",
  "insert",
  "insertAll",
  "reduce",
  "replace",
  "slice",
  "ifElse",
  "orDefault",
  "smooth",
  "j2",
  "addIndex",
  "pick",
  "bind",
  "flip",
  "liftN",
  "lift",
  "thunkify",
  "groupBy",
  "isEmpty",
  "when",
  "unless",
  "flatten",
  "chain",
  "reject",
  "omit",
  "uniq",
  "intersection",
  "median",
  "isObject",
  "union",
  "difference",
  "symmetricDifference",
  "anyPass",
  "allPass",
  "pathOr",
  "hasProp",
  "hasPath",
  "path",
  "pathEq",
  "pathSatisfies",
  "pathIs",
  "propOr",
  "prop",
  "propEq",
  "propSatisfies",
  "propIs",
  "props",
  "eqProps",
  "pluck",
  "applySpecN",
  "I",
  "K",
  "always",
  "entries",
  "every",
  "fromEntries",
  "merge",
  "mergeAll",
  "mergeRight",
  "sideEffect2",
  "some",
  "sortBy",
  "tap",
  "head",
  "of",
  "custom",
]
`;

exports[`v4 vs. v3 [ENV: production] 1`] = `
Array [
  "trim",
  "isArray",
  "keys",
  "values",
  "freeze",
  "round",
  "F",
  "T",
  "adjust",
  "append",
  "assoc",
  "box",
  "call",
  "complement",
  "compose",
  "constant",
  "dec",
  "dissoc",
  "drop",
  "dropLast",
  "empty",
  "first",
  "fromPairs",
  "identity",
  "inc",
  "init",
  "invert",
  "invertObj",
  "jam",
  "juxt",
  "keysIn",
  "last",
  "length",
  "mash",
  "mean",
  "mode",
  "move",
  "negate",
  "not",
  "nthArg",
  "objOf",
  "once",
  "pair",
  "partial",
  "partialRight",
  "pipe",
  "prepend",
  "repeat",
  "reverse",
  "smash",
  "splitAt",
  "sum",
  "product",
  "tail",
  "take",
  "takeLast",
  "weld",
  "test",
  "toLower",
  "toPairs",
  "toUpper",
  "update",
  "sideEffect",
  "binarySideEffect",
  "trace",
  "inspect",
  "memoizeWith",
  "def",
  "curry",
  "curryN",
  "is",
  "isBoolean",
  "isFunction",
  "isNumber",
  "isRawObject",
  "isString",
  "isSymbol",
  "isUndefined",
  "isUnmatched",
  "isNil",
  "cleanErrorStackFor",
  "add",
  "all",
  "and",
  "any",
  "ap",
  "apply",
  "applyTo",
  "concat",
  "cond",
  "divide",
  "endsWith",
  "equals",
  "filter",
  "find",
  "findLast",
  "findIndex",
  "findLastIndex",
  "forEach",
  "gt",
  "gte",
  "hasIn",
  "has",
  "identical",
  "includes",
  "indexOf",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "map",
  "match",
  "max",
  "min",
  "multiply",
  "none",
  "nth",
  "or",
  "pickBy",
  "range",
  "sort",
  "split",
  "startsWith",
  "subtract",
  "toJSON",
  "tryCatch",
  "both",
  "either",
  "eqBy",
  "innerJoin",
  "insert",
  "insertAll",
  "reduce",
  "replace",
  "slice",
  "ifElse",
  "orDefault",
  "smooth",
  "j2",
  "addIndex",
  "pick",
  "bind",
  "flip",
  "liftN",
  "lift",
  "thunkify",
  "groupBy",
  "isEmpty",
  "when",
  "unless",
  "flatten",
  "chain",
  "reject",
  "omit",
  "uniq",
  "intersection",
  "isObject",
  "median",
  "union",
  "difference",
  "symmetricDifference",
  "anyPass",
  "allPass",
  "pathOr",
  "hasPath",
  "path",
  "pathEq",
  "pathSatisfies",
  "pathIs",
  "hasProp",
  "propOr",
  "prop",
  "propEq",
  "propSatisfies",
  "propIs",
  "props",
  "eqProps",
  "pluck",
  "applySpecN",
  "I",
  "K",
  "always",
  "entries",
  "every",
  "fromEntries",
  "merge",
  "mergeAll",
  "mergeRight",
  "sideEffect2",
  "some",
  "sortBy",
  "tap",
  "head",
  "of",
]
`;
